From d6238393e205423cdaffab5b4ed5b47a3751d1e8 Mon Sep 17 00:00:00 2001
From: Johan Vervloet <johan.vervloet@kuleuven.be>
Date: Mon, 2 Oct 2017 22:24:36 +0200
Subject: [PATCH 1/3] A unit test to illustrate CRM-21246.

Chaining Contact.get - Relationship.get - Contact.get does not work.
Added a test that passes as well.
---
 tests/phpunit/api/v3/RelationshipTest.php | 55 +++++++++++++++++++++++++++++++
 1 file changed, 55 insertions(+)

diff --git a/tests/phpunit/api/v3/RelationshipTest.php b/tests/phpunit/api/v3/RelationshipTest.php
index 040b98df5a6..da50d23f1da 100644
--- a/tests/phpunit/api/v3/RelationshipTest.php
+++ b/tests/phpunit/api/v3/RelationshipTest.php
@@ -779,6 +779,61 @@ public function testRelationshipsGet() {
   }
 
   /**
+   * Chain Relationship.get and to Contact.get.
+   */
+  public function testRelationshipGetWithChainedCall() {
+    // Create a relationship.
+    $createResult = $this->callAPISuccess('relationship',  'create', $this->_params);
+    $id = $createResult['id'];
+
+    // Try to retrieve it using chaining.
+    $params = array(
+      'relationship_type_id' => $this->_relTypeID,
+      'id' => $id,
+      'api.Contact.get' => array(
+        'id' => '$value.contact_id_b',
+      ),
+    );
+
+    $result = $this->callAPISuccess('relationship', 'get', $params);
+
+    $this->assertEquals(1, $result['count']);
+    $relationship = CRM_Utils_Array::first($result['values']);
+    $this->assertEquals(1, $relationship['api.Contact.get']['count']);
+    $contact = CRM_Utils_Array::first($relationship['api.Contact.get']['values']);
+    $this->assertEquals($this->_cId_b, $contact['id']);
+  }
+
+  /**
+   * Chain Contact.get to Relationship.get and again to Contact.get.
+   */
+  public function testRelationshipGetInChainedCall() {
+    // Create a relationship.
+    $this->callAPISuccess('relationship',  'create', $this->_params);
+
+    // Try to retrieve it using chaining.
+    $params = array(
+      'id' => $this->_cId_a,
+      'api.Relationship.get' => array(
+        'relationship_type_id' => $this->_relTypeID,
+        'contact_id_a' => '$value.id',
+        'api.Contact.get' => array(
+          'id' => '$value.contact_id_b',
+        ),
+      ),
+    );
+
+    $result = $this->callAPISuccess('contact', 'get', $params);
+    $this->assertEquals(1, $result['count']);
+    $contact = CRM_Utils_Array::first($result['values']);
+    $this->assertEquals(1, $contact['api.Relationship.get']['count']);
+    $relationship = CRM_Utils_Array::first($contact['api.Relationship.get']['values']);
+    $this->assertEquals(1, $relationship['api.Contact.get']['count']);
+    $contact = CRM_Utils_Array::first($relationship['api.Contact.get']['values']);
+    $this->assertEquals($this->_cId_b, $contact['id']);
+  }
+
+  /**
    * Check with valid params array.
    * (The get function will behave differently without 'contact_id' passed
    */

From 62780af8ceaaaf068b19351f201ca71685f06739 Mon Sep 17 00:00:00 2001
From: Johan Vervloet <johan.vervloet@kuleuven.be>
Date: Wed, 4 Oct 2017 22:54:47 +0200
Subject: [PATCH 2/3] Fix for double chaining problem.

---
 api/api.php | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/api/api.php b/api/api.php
index 5c432630a8e..04b0421bcbb 100644
--- a/api/api.php
+++ b/api/api.php
@@ -129,6 +129,10 @@ function _civicrm_api_get_camel_name($entity) {
  */
 function _civicrm_api_replace_variables(&$params, &$parentResult, $separator = '.') {
   foreach ($params as $field => &$value) {
+    if (substr($field, 0, 4) == 'api.') {
+      // CRM-21246 - Leave nested calls alone.
+      continue;
+    }
     if (is_string($value) && substr($value, 0, 6) == '$value') {
       $value = _civicrm_api_replace_variable($value, $parentResult, $separator);
     }

From a457852d4f5a28c4143d58519ef5709bb4aae701 Mon Sep 17 00:00:00 2001
From: Johan Vervloet <johan.vervloet@kuleuven.be>
Date: Wed, 4 Oct 2017 23:02:21 +0200
Subject: [PATCH 3/3] Traditional phpcs errors.

---
 tests/phpunit/api/v3/RelationshipTest.php | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/tests/phpunit/api/v3/RelationshipTest.php b/tests/phpunit/api/v3/RelationshipTest.php
index da50d23f1da..e8cb9b2a314 100644
--- a/tests/phpunit/api/v3/RelationshipTest.php
+++ b/tests/phpunit/api/v3/RelationshipTest.php
@@ -783,7 +783,7 @@ public function testRelationshipsGet() {
    */
   public function testRelationshipGetWithChainedCall() {
     // Create a relationship.
-    $createResult = $this->callAPISuccess('relationship',  'create', $this->_params);
+    $createResult = $this->callAPISuccess('relationship', 'create', $this->_params);
     $id = $createResult['id'];
 
     // Try to retrieve it using chaining.
@@ -809,7 +809,7 @@ public function testRelationshipGetWithChainedCall() {
    */
   public function testRelationshipGetInChainedCall() {
     // Create a relationship.
-    $this->callAPISuccess('relationship',  'create', $this->_params);
+    $this->callAPISuccess('relationship', 'create', $this->_params);
 
     // Try to retrieve it using chaining.
     $params = array(
